#!/usr/bin/env node

const fs = require('fs'),
	osm2geojson = require('../.');

process.on('uncaughtException', err => console.error(err));

const args = process.argv.slice(2);

const sidx1 = args.indexOf('--silent'), sidx2 = args.indexOf('-s');

let shouldBeSilent = sidx1 >= 0 || sidx2 >= 0;
if (sidx1 >= 0) args.splice(sidx1, 1);
if (sidx2 >= 0) args.splice(sidx2, 1);

const pidx1 = args.indexOf('--profile'), pidx2 = args.indexOf('-p');

let rounds = 1;
const profile = pidx1 >= 0 || pidx2 >= 0;
if (pidx1 >= 0) args.splice(pidx1, 1);
if (pidx2 >= 0) args.splice(pidx2, 1);
if (profile) {
	shouldBeSilent = true;
	rounds = parseInt(args[1]) || 1;
}

const fileName = args[0];
if (fileName) {
	let osm = fs.readFileSync(fileName, 'utf-8');
	if (profile) {
		let stime = new Date().getTime();
		for (let i = 0; i < rounds; i++)
			osm2geojson(osm, {completeFeature: true});
		let etime = new Date().getTime();
		console.log(`${etime - stime}ms cost by ${rounds} rounds of conversion`);
	} else {
		let featureCollection = osm2geojson(osm, {completeFeature: true});
		if (!shouldBeSilent)
                	console.log(JSON.stringify(featureCollection, null, 2));
	}
	
	return;
}

console.log(`Usage: osm2geojson <xml/json file> [-s/--silent] [-p/--profile]`);
